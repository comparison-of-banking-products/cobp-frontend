name: Lint, Format, Build, and Publish DEV Image

on:
  pull_request:
    branches:
      - dev
  workflow_dispatch:

jobs:
  lint-and-format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Install dependencies
        run: npm install

      - name: Install Husky
        run: npm run prepare

      - name: Run linting
        run: npm run lint

      - name: Auto-fix linting issues
        run: npm run lint:fix

      - name: Format code
        run: npm run format

      - name: Configure git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "<>"

      - name: Check for changes
        run: |
          if [[ -n $(git status -s) ]]; then
            git add .
            git commit --no-verify -m "Apply linting and formatting changes"
            git push
          else
            echo "No changes to commit."
          fi

  build-and-publish:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Install dependencies
        run: npm install

      - name: Build with npm
        run: npm run build -- --no-ci

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
